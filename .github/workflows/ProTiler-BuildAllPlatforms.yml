name: ProTiler - Build All Platforms

on: workflow_dispatch

jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows # Build a Windows standalone.
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
          - iOS # Build an iOS player.
          - Android # Build an Android .apk standalone app.
          - WebGL # WebGL.
        unityVersion:
          - 2022.2.0f1
          - 2022.1.0f1
          - 2021.3.0f1
          - 2021.2.0f1
        projectPath:
          - ProTiler
    
    steps:
      # Checkout
      - name: Checkout Files
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true
          
      # Cache
      - name: Cache Library
        uses: actions/cache@v3
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{
            hashFiles(matrix.projectPath) }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
            Library-${{ matrix.projectPath }}-
            Library-
            
      # Build
      - name: Build ${{ matrix.targetPlatform }}
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ${{ matrix.projectPath }}
          targetPlatform: ${{ matrix.targetPlatform }}
      
      # Output
      - name: Create Output for ${{ matrix.targetPlatform }}
        uses: actions/upload-artifact@v3
        with:
          name: Build-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
          path: Builds/${{ matrix.projectPath }}-${{ matrix.targetPlatform }}

#  buildWebGL:
#    needs: testRunner
#    name: Build for WebGL 🖥️
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Create LFS file list
#        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
#
#      - name: Restore LFS cache
#        uses: actions/cache@v2
#        id: lfs-cache
#        with:
#          path: .git/lfs
#          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
#
#      - name: Git LFS Pull
#        run: |
#          git lfs pull
#          git add .
#          git reset --hard
#
#      - name: Restore Library cache
#        uses: actions/cache@v2
#        with:
#          path: ProTiler/Library
#          key: Library-build-WebGL
#          restore-keys: |
#            Library-build-
#            Library-
#
#      - uses: webbertakken/unity-builder@v2
#        with:
#          targetPlatform: WebGL
#
#      - uses: actions/upload-artifact@v2
#        with:
#          name: build-WebGL
#          path: build/WebGL

#  deployPages:
#    needs: buildWebGL
#    name: Deploy to Github Pages 🚀
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - uses: actions/download-artifact@v2
#        with:
#          name: build-WebGL
#          path: ProTiler/Builds
#
#      - name: Display structure of root files
#        run: ls -R
#        working-directory: ProTiler/Builds/WebGL
#
#      - name: Deploy 🚀
#        uses: JamesIves/github-pages-deploy-action@4.1.4
#        with:
#          branch: gh-pages
#          folder: ProTiler/Builds/WebGL